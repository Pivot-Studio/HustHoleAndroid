if (isRelease) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.kotlin.android'
android {
    compileSdkVersion androidID.compileSdkVersion
    defaultConfig {
        minSdkVersion androidID.minSdkVersion
        targetSdkVersion androidID.targetSdkVersion
        versionCode androidID.versionCode
        versionName androidID.versionName
        if (!isRelease) {//当为release模式时不需要id
            applicationId "cn.pivotstudio.modulep.report"
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("boolean", "isRelease", String.valueOf(isRelease))
        javaCompileOptions {//ARouter跨组件需要
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        dataBinding {//
            enabled = true
        }

        buildFeatures {
            viewBinding true
            compose true
        }

        composeOptions {
            kotlinCompilerExtensionVersion = "1.4.3"
        }

        kotlinOptions {
            jvmTarget = "17"
        }
    }
    sourceSets {
        if (!isMac) {
            main {
                if (!isRelease) {//不同状态下使用不同清单文件
                    manifest.srcFile '/src/main/debug/AndroidManifest.xml'
                } else {
                    manifest.srcFile '/src/main/AndroidManifest.xml'
                    java {
                        //release时所有debug目录下的文件不合并
                        exclude '**/debug/**'
                    }
                }
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    namespace 'cn.pivotstudio.modulep.report'
}

dependencies {
    implementation project(':modulesBase:libBase')
    implementation project(':modulesBase:networkBase')
    implementation project(':modulesBase:resBase')


    kapt "com.alibaba:arouter-compiler:$ARouter_version"//每个组件都要添加

    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.compose.material3:material3:$material3_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"


    implementation "androidx.compose.runtime:runtime"
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.foundation:foundation"
    implementation "androidx.compose.foundation:foundation-layout"
    implementation "androidx.compose.material:material"
    implementation "androidx.compose.runtime:runtime-livedata"
    implementation "androidx.compose.ui:ui-tooling"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}